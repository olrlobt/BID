buildscript {
    ext {
        springBootVersion = '3.2.2'
        queryDslVersion = "5.0.0"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
    apply plugin: 'java'
//    apply plugin: 'checkstyle'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.ssafy'
    version '0.0.1-SNAPSHOT'

    sourceCompatibility = '17'
    targetCompatibility = '17'
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

//    checkstyle {
//        maxWarnings = 0 // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail
//        configFile = file("${rootDir}/naver-checkstyle-rules.xml")
//        configProperties = ["suppressionFile" : "${rootDir}/naver-checkstyle-suppressions.xml"]
//        toolVersion ="8.24"
//    }

    tasks.register('addGitPrecommitHook', Copy) {
        from 'script/pre-commit'
        into '.git/hooks'
    }

    repositories {
        mavenCentral()
    }

    // 하위 모듈에서 공통으로 사용하는 세팅 추가
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        implementation 'net.nurigo:sdk:4.2.7'
        implementation 'org.apache.commons:commons-lang3'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    }

    test {
        useJUnitPlatform()
    }

    // Querydsl 설정부
    def generated = 'src/main/generated'

    // querydsl QClass 파일 생성 위치를 지정
    tasks.withType(JavaCompile) {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
        options.compilerArgs += ['-parameters']
    }

    // java source set 에 querydsl QClass 위치 추가
    sourceSets {
        main.java.srcDirs += [generated]
    }

    // gradle clean 시에 QClass 디렉토리 삭제
    clean {
        delete file(generated)
    }
}

project(':bid-core') {
    // 공통 코드
    bootJar {
        enabled = false
    } // core 은 bootJar 로 패키징 할 필요 없음
    jar { enabled = true }

    dependencies {
    }
}

project(':bid-admin') {
    bootJar {
        enabled = true
        archiveFileName = 'bid-admin-0.0.1-SNAPSHOT.jar'
    }
    jar { enabled = false }

    dependencies {
        implementation project(':bid-core') // 컴파일 시 bid-core project 로딩
    }
}

project(':bid-student') {
    bootJar {
        enabled = true
        archiveFileName = 'bid-student-0.0.1-SNAPSHOT.jar'
    }
    jar { enabled = false }

    dependencies {
        implementation project(':bid-core') // 컴파일 시 bid-core project 로딩
    }
}
